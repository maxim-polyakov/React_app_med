[{"D:\\GitHub\\React_app_med\\client\\src\\http\\userAPI.js":"1","D:\\GitHub\\React_app_med\\client\\src\\http\\index.js":"2","D:\\GitHub\\React_app_med\\client\\src\\index.tsx":"3","D:\\GitHub\\React_app_med\\client\\src\\store\\DeviceStore.ts":"4","D:\\GitHub\\React_app_med\\client\\src\\store\\UserStore.ts":"5","D:\\GitHub\\React_app_med\\client\\src\\App.tsx":"6","D:\\GitHub\\React_app_med\\client\\src\\http\\deviceApi.ts":"7","D:\\GitHub\\React_app_med\\client\\src\\components\\Navbar\\Navbar.tsx":"8","D:\\GitHub\\React_app_med\\client\\src\\components\\AppRouter.tsx":"9","D:\\GitHub\\React_app_med\\client\\src\\Routes.ts":"10","D:\\GitHub\\React_app_med\\client\\src\\utils\\consts.ts":"11","D:\\GitHub\\React_app_med\\client\\src\\pages\\index.ts":"12","D:\\GitHub\\React_app_med\\client\\src\\pages\\Shop.tsx":"13","D:\\GitHub\\React_app_med\\client\\src\\pages\\DevicePage.tsx":"14","D:\\GitHub\\React_app_med\\client\\src\\pages\\Basket.tsx":"15","D:\\GitHub\\React_app_med\\client\\src\\pages\\Admin.tsx":"16","D:\\GitHub\\React_app_med\\client\\src\\pages\\Auth.tsx":"17","D:\\GitHub\\React_app_med\\client\\src\\components\\TypeBar\\TypeBar.tsx":"18","D:\\GitHub\\React_app_med\\client\\src\\components\\BrandBar\\BrandBar.tsx":"19","D:\\GitHub\\React_app_med\\client\\src\\components\\DeviceList\\DeviceList.tsx":"20","D:\\GitHub\\React_app_med\\client\\src\\components\\Pages\\Pages.tsx":"21","D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateBrand.tsx":"22","D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateType.tsx":"23","D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateDevice.tsx":"24","D:\\GitHub\\React_app_med\\client\\src\\components\\DeviceList\\DeviceItem\\DeviceItem.tsx":"25","D:\\GitHub\\React_app_med\\client\\src\\http\\userApi.js":"26"},{"size":762,"mtime":1700562934000,"results":"27","hashOfConfig":"28"},{"size":411,"mtime":1700562934000,"results":"29","hashOfConfig":"28"},{"size":708,"mtime":1700562934000,"results":"30","hashOfConfig":"28"},{"size":2943,"mtime":1700562934000,"results":"31","hashOfConfig":"28"},{"size":637,"mtime":1700562934000,"results":"32","hashOfConfig":"28"},{"size":1550,"mtime":1740699012914,"results":"33","hashOfConfig":"28"},{"size":1268,"mtime":1700562934000,"results":"34","hashOfConfig":"28"},{"size":2213,"mtime":1700562934000,"results":"35","hashOfConfig":"28"},{"size":1443,"mtime":1700562934000,"results":"36","hashOfConfig":"28"},{"size":691,"mtime":1700562934000,"results":"37","hashOfConfig":"28"},{"size":234,"mtime":1700562934000,"results":"38","hashOfConfig":"28"},{"size":173,"mtime":1700562934000,"results":"39","hashOfConfig":"28"},{"size":1570,"mtime":1700562934000,"results":"40","hashOfConfig":"28"},{"size":4115,"mtime":1700562934000,"results":"41","hashOfConfig":"28"},{"size":103,"mtime":1700562934000,"results":"42","hashOfConfig":"28"},{"size":1720,"mtime":1700562934000,"results":"43","hashOfConfig":"28"},{"size":5063,"mtime":1700562934000,"results":"44","hashOfConfig":"28"},{"size":711,"mtime":1700562934000,"results":"45","hashOfConfig":"28"},{"size":969,"mtime":1700562934000,"results":"46","hashOfConfig":"28"},{"size":536,"mtime":1700562934000,"results":"47","hashOfConfig":"28"},{"size":894,"mtime":1700562934000,"results":"48","hashOfConfig":"28"},{"size":1408,"mtime":1700562934000,"results":"49","hashOfConfig":"28"},{"size":1333,"mtime":1700562934000,"results":"50","hashOfConfig":"28"},{"size":8003,"mtime":1700562934000,"results":"51","hashOfConfig":"28"},{"size":1266,"mtime":1700562934000,"results":"52","hashOfConfig":"28"},{"size":762,"mtime":1700562934000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1gk9cv",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\React_app_med\\client\\src\\http\\userAPI.js",[],["117","118"],"D:\\GitHub\\React_app_med\\client\\src\\http\\index.js",[],"D:\\GitHub\\React_app_med\\client\\src\\index.tsx",[],["119","120"],"D:\\GitHub\\React_app_med\\client\\src\\store\\DeviceStore.ts",[],"D:\\GitHub\\React_app_med\\client\\src\\store\\UserStore.ts",[],"D:\\GitHub\\React_app_med\\client\\src\\App.tsx",["121"],"import { BrowserRouter } from \"react-router-dom\";\nimport { AppRouter } from \"./components/AppRouter\";\nimport { MyNavbar } from \"./components/Navbar/Navbar\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \".\";\nimport { check } from \"./http/userApi\";\nimport { Spinner } from \"react-bootstrap\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"./http/deviceApi\";\n\nconst App = observer(() => {\n    const { user, devices } = useContext(Context);\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        try {\n            setTimeout(() => {\n                fetchTypes().then((data) => devices?.setTypes(data));\n                fetchBrands().then((data) => devices?.setBrands(data));\n                fetchDevices(null!, null!, 1, 3).then((data) => {\n                    devices?.setDevices(data.rows);\n                    devices?.setTotalCount(data.count);\n                });\n\n                check()\n                    .then((data) => {\n                        user?.setUser(data);\n                        user?.setIsAuth(true);\n                    })\n                    .finally(() => setLoading(false));\n            }, 1000);\n        } catch (e) {\n            console.log(e);\n        }\n    }, []);\n\n    if (loading) {\n        return <Spinner animation=\"grow\"></Spinner>;\n    }\n    return (\n        <BrowserRouter>\n            <MyNavbar></MyNavbar>\n            <AppRouter></AppRouter>\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\GitHub\\React_app_med\\client\\src\\http\\deviceApi.ts",["122","123"],"import { $host, $authhost } from \".\";\nimport { jwtDecode } from \"jwt-decode\";\nimport {\n    BrandsInterface,\n    DevicesInterface,\n    TypesInterface,\n} from \"../store/DeviceStore\";\n\nexport const createType = async (type: TypesInterface) => {\n    const { data } = await $authhost.post(\"api/type\", type);\n    return data;\n};\n\nexport const fetchTypes = async () => {\n    const { data } = await $host.get(\"api/type\");\n    return data;\n};\n\nexport const createBrand = async (brand: BrandsInterface) => {\n    const { data } = await $authhost.post(\"api/brand\", brand);\n    return data;\n};\n\nexport const fetchBrands = async () => {\n    const { data } = await $host.get(\"api/brand\");\n    return data;\n};\n\nexport const createDevice = async (device: any) => {\n    const { data } = await $authhost.post(\"api/device\", device);\n    return data;\n};\n\nexport const fetchDevices = async (\n    typeId: number,\n    brandId: number,\n    page: number,\n    limit = 3\n) => {\n    const { data } = await $host.get(\"api/device\", {\n        params: {\n            typeId,\n            brandId,\n            page,\n            limit,\n        },\n    });\n    return data;\n};\n\nexport const fetchOneDevice = async (id: any) => {\n    const { data } = await $host.get(`api/device/${id}`);\n    return data;\n};\n","D:\\GitHub\\React_app_med\\client\\src\\components\\Navbar\\Navbar.tsx",["124","125","126"],"import { FC, useContext } from \"react\";\nimport { Context } from \"../..\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Button, Container, Nav } from \"react-bootstrap\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n    ADMIN_ROUTE,\n    LOGIN_ROUTE,\n    REGISTRATION_ROUTE,\n    SHOP_ROUTE,\n} from \"../../utils/consts\";\n\nexport const MyNavbar: FC = observer(() => {\n    const { user, devices } = useContext(Context);\n\n    const logOut = () => {\n        user?.setUser({});\n        user?.setIsAuth(false);\n        localStorage.removeItem(\"token\");\n    };\n\n    return (\n        <>\n            <Navbar bg=\"dark\" data-bs-theme=\"dark\">\n                <Container>\n                    <NavLink\n                        style={{ color: \"white\", textDecoration: \"none\" }}\n                        to=\"/\"\n                    >\n                        MyStore\n                    </NavLink>\n                    {user?.isAuth ? (\n                        <Nav className=\"ml-auto\">\n                            <Link to={ADMIN_ROUTE}>\n                                <Button variant=\"outline-light\">\n                                    Админ панель\n                                </Button>\n                            </Link>\n                            <Link to={LOGIN_ROUTE}>\n                                <Button\n                                    variant=\"outline-light\"\n                                    style={{ marginLeft: \"0.5rem\" }}\n                                    onClick={() => logOut()}\n                                >\n                                    Выйти\n                                </Button>\n                            </Link>\n                        </Nav>\n                    ) : (\n                        <Nav className=\"ml-auto\">\n                            <Link to={LOGIN_ROUTE}>\n                                <Button variant=\"outline-light\">\n                                    Авторизация\n                                </Button>\n                            </Link>\n                        </Nav>\n                    )}\n                </Container>\n            </Navbar>\n        </>\n    );\n});\n","D:\\GitHub\\React_app_med\\client\\src\\components\\AppRouter.tsx",["127","128","129","130","131","132","133"],"import React, { FC, useContext, useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Shop, Admin, Auth, DevicePage, Basket } from \"../pages\";\nimport { authRoutes, publickRoutes } from \"../Routes\";\nimport { Context } from \"..\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const AppRouter: FC = observer(() => {\n    const { user } = useContext(Context);\n\n    let isAuth = user?._isAuth;\n\n    return (\n        <Routes>\n            {isAuth &&\n                authRoutes.map(({ path, Component }) => {\n                    return (\n                        <Route\n                            key={path}\n                            path={path}\n                            Component={Component}\n                        ></Route>\n                    );\n                })}\n            {publickRoutes.map(({ path, Component }) => (\n                <Route key={path} path={path} Component={Component}></Route>\n            ))}\n            <Route path=\"*\" element={<Shop></Shop>}></Route>\n        </Routes>\n    );\n});\n\n{\n    /* <Route path=\"/\" Component={Shop}></Route>\n            <Route path=\"/admin\" element={<Admin></Admin>}></Route>\n            <Route path=\"/auth\" element={<Auth></Auth>}></Route>\n            <Route path=\"/basket\" element={<Basket></Basket>}></Route>\n            <Route\n                path=\"/device/:id\"\n                element={<DevicePage></DevicePage>}\n            ></Route> */\n}\n","D:\\GitHub\\React_app_med\\client\\src\\Routes.ts",[],"D:\\GitHub\\React_app_med\\client\\src\\utils\\consts.ts",[],"D:\\GitHub\\React_app_med\\client\\src\\pages\\index.ts",[],"D:\\GitHub\\React_app_med\\client\\src\\pages\\Shop.tsx",["134","135","136"],"import React, { FC, useContext, useEffect } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { TypeBar } from \"../components/TypeBar/TypeBar\";\nimport { BrandBar } from \"../components/BrandBar/BrandBar\";\nimport { DeviceList } from \"../components/DeviceList/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"..\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceApi\";\nimport { Pages } from \"../components/Pages/Pages\";\n\nexport const Shop: FC = observer(() => {\n    const { devices } = useContext(Context);\n\n    useEffect(() => {\n        fetchDevices(\n            devices?.selectedType?.id!,\n            devices?.selectedBrand?.id!,\n            devices?.page!,\n            2\n        ).then((data) => {\n            if (data.rows) {\n                devices?.setDevices(data?.rows);\n            } else {\n                devices?.setDevices(data);\n            }\n            if (data.count) {\n                devices?.setTotalCount(data?.count);\n            } else {\n                devices?.setTotalCount(data);\n            }\n        });\n    }, [devices?.page, devices?.selectedType, devices?.selectedBrand]);\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar></TypeBar>\n                </Col>\n                <Col md={9}>\n                    <BrandBar></BrandBar>\n                    <DeviceList></DeviceList>\n                    <Pages></Pages>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n","D:\\GitHub\\React_app_med\\client\\src\\pages\\DevicePage.tsx",["137","138","139","140"],"import { FC, useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport { Context } from \"..\";\nimport { useParams } from \"react-router-dom\";\nimport { IoStarOutline } from \"react-icons/io5\";\nimport { observer } from \"mobx-react-lite\";\nimport { fetchOneDevice } from \"../http/deviceApi\";\nimport { DevicesInterface } from \"../store/DeviceStore\";\n\ninterface descriptionInterface {\n    id: number;\n    title: string;\n    description: string;\n}\n\nexport const DevicePage: FC = observer(() => {\n    const [device, setDevice] = useState<DevicesInterface>({\n        id: 0, // Установите здесь значения по умолчанию или оставьте пустыми в зависимости от ваших потребностей\n        name: \"\",\n        price: 0,\n        rating: 0,\n        img: \"\",\n        brandId: 0,\n        typeId: 0,\n        info: [],\n    });\n\n    const { id } = useParams();\n    useEffect(() => {\n        fetchOneDevice(id).then((data) => setDevice(data));\n    }, []);\n\n    // `${process.env.REACT_APP_API_URL}/${device?.img}`\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                {device.img && (\n                    <Col md={4}>\n                        <Image\n                            width={300}\n                            height={300}\n                            src={`${process.env.REACT_APP_API_URL}/${device.img}`}\n                        ></Image>\n                    </Col>\n                )}\n                <Col md={4}>\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <h2>{device?.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center \"\n                            style={{\n                                background: `url(https://upload.wikimedia.org/wikipedia/commons/f/fd/A_star.png) no-repeat center center`,\n                                width: 240,\n                                height: 240,\n                                backgroundSize: \"cover\",\n                                fontSize: 64,\n                            }}\n                        >\n                            <span style={{ marginRight: 8, marginTop: 8 }}>\n                                {device?.rating}\n                            </span>\n                        </div>\n                    </div>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-center\"\n                        style={{\n                            width: 300,\n                            height: 300,\n                            fontSize: 32,\n                            border: \"5px solid lightgray\",\n                        }}\n                    >\n                        <h3>От: {device?.price} руб.</h3>\n                        <Button variant=\"outline-dark\">\n                            Добавить в корзину\n                        </Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex mt-3\">\n                <h2>Описание</h2>\n                {device.info &&\n                    device.info.map(\n                        (item: descriptionInterface, index: number) => (\n                            <Row\n                                key={item.id}\n                                style={{\n                                    background:\n                                        index % 2 === 0\n                                            ? \"lightgray\"\n                                            : \"transparent\",\n                                    padding: 10,\n                                }}\n                            >\n                                {item.title} : {item.description}\n                            </Row>\n                        )\n                    )}\n                {}\n            </Row>\n        </Container>\n    );\n});\n","D:\\GitHub\\React_app_med\\client\\src\\pages\\Basket.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\pages\\Admin.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\pages\\Auth.tsx",["141","142"],"import React, { FC, useContext, useState } from \"react\";\nimport { Button, Card, Container, Form, Row } from \"react-bootstrap\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE } from \"../utils/consts\";\nimport { login, registration } from \"../http/userApi\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"..\";\n\nexport const Auth: FC = observer(() => {\n    const { user } = useContext(Context);\n    const location = useLocation();\n    const isLogin = location.pathname === LOGIN_ROUTE && true;\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const swapMethod = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    const signIn = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n\n                navigate(\"/\");\n            } else {\n                data = await registration(email, password);\n\n                navigate(\"/\");\n            }\n\n            user?.setUser(user);\n            user?.setIsAuth(true);\n\n            setEmail(\"\");\n            setPassword(\"\");\n        } catch (e: any) {\n            console.log(e.response.data);\n        }\n    };\n\n    return isLogin ? (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{ height: window.innerHeight - 54 }}\n        >\n            <Card style={{ width: 600 }} className=\"p-5\">\n                <h2 className=\"m-auto\">Авторизация</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                    <Form.Control\n                        className=\"mt-2\"\n                        placeholder=\"Введите пароль\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        type=\"password\"\n                    ></Form.Control>\n                    <div className=\"d-flex justify-content-between mt-3 pl-3 pr-3 falign-items-center\">\n                        <div>\n                            Нет аккаунта?\n                            <Link\n                                to={REGISTRATION_ROUTE}\n                                style={{ textDecoration: \"none\" }}\n                                onClick={() => swapMethod()}\n                            >\n                                {\" \"}\n                                Регистрация\n                            </Link>\n                        </div>\n                        <Button\n                            variant=\"outline-success\"\n                            onClick={() => signIn()}\n                        >\n                            Войти\n                        </Button>\n                    </div>\n                </Form>\n            </Card>\n        </Container>\n    ) : (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{ height: window.innerHeight - 54 }}\n        >\n            <Card style={{ width: 600 }} className=\"p-5\">\n                <h2 className=\"m-auto\">Регистрация</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                    <Form.Control\n                        className=\"mt-2\"\n                        placeholder=\"Введите пароль\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                    <div className=\"d-flex justify-content-between mt-3 pl-3 pr-3 falign-items-center\">\n                        <div>\n                            Уже есть аккаунт?\n                            <Link\n                                to={LOGIN_ROUTE}\n                                style={{ textDecoration: \"none\" }}\n                                onClick={() => swapMethod()}\n                            >\n                                {\" \"}\n                                Войти\n                            </Link>\n                        </div>\n                        <Button\n                            variant=\"outline-success\"\n                            onClick={() => signIn()}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </div>\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n","D:\\GitHub\\React_app_med\\client\\src\\components\\TypeBar\\TypeBar.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\components\\BrandBar\\BrandBar.tsx",["143","144"],"import { FC, useContext } from \"react\";\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\nimport { Context } from \"../..\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const BrandBar: FC = observer(() => {\n    const { devices } = useContext(Context);\n\n    return (\n        <Row className=\"d-flex\" bsPrefix=\"col\">\n            {devices?.brands.map((brand) => (\n                <Card\n                    border={\n                        brand.id === devices.selectedBrand?.id\n                            ? \"success\"\n                            : \"light\"\n                    }\n                    className=\"p-3\"\n                    style={{ cursor: \"pointer\" }}\n                    // active={devices._selectedBrand?.id === brand.id}\n                    key={brand.id}\n                    onClick={() => devices.setSelectedBrand(brand)}\n                >\n                    {brand.name}\n                </Card>\n            ))}\n        </Row>\n    );\n});\n","D:\\GitHub\\React_app_med\\client\\src\\components\\DeviceList\\DeviceList.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\components\\Pages\\Pages.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateBrand.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateType.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\components\\Modals\\CreateDevice.tsx",["145"],"import React, { FC, useContext, useRef, useState } from \"react\";\nimport { Button, Col, Dropdown, Form, Modal, Row } from \"react-bootstrap\";\nimport { Context } from \"../..\";\nimport { observer } from \"mobx-react-lite\";\nimport { createDevice } from \"../../http/deviceApi\";\n\ninterface CreateDeviceProps {\n    show: boolean;\n    onHide: any;\n}\n\ninterface InfoInterface {\n    title: string;\n    description: string;\n    number: number;\n}\n\nexport const CreateDevice: FC<CreateDeviceProps> = observer(\n    ({ show, onHide }) => {\n        const { devices } = useContext(Context);\n        const [info, setInfo] = useState<InfoInterface[] | []>([]);\n\n        const [name, setName] = useState(\"\");\n        const [price, setPrice] = useState<number | \"\">(\"\");\n        const [file, setFile] = useState(\"\");\n\n        const addInfo = () => {\n            setInfo((prev) => {\n                return [\n                    ...prev,\n                    { title: \"\", description: \"\", number: Date.now() },\n                ];\n            });\n        };\n\n        const changeInfo = (key: string, value: string, number: number) => {\n            setInfo((prev) =>\n                prev.map((i) =>\n                    i.number === number ? { ...i, [key]: value } : i\n                )\n            );\n        };\n\n        const addDevice = () => {\n            const formData = new FormData();\n            formData.append(\"name\", name);\n            formData.append(\"price\", `${price}`);\n            formData.append(\"img\", file);\n            formData.append(\"brandId\", `${devices?.selectedBrand?.id}`);\n            formData.append(\"typeId\", `${devices?.selectedType?.id}`);\n            formData.append(\"info\", JSON.stringify(info));\n            createDevice(formData).then((data) => onHide());\n        };\n\n        const removeInfo = (number: number) => {\n            setInfo(info.filter((i) => i.number !== number));\n        };\n\n        const selectFile = (e: any) => {\n            if (e.target.files) {\n                setFile(e.target.files[0]);\n            }\n        };\n        return (\n            <Modal show={show} onHide={onHide} size=\"lg\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Добавить девайс\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"d-flex gap-1\">\n                        <Dropdown>\n                            <Dropdown.Toggle className=\"w-40\">\n                                {devices?.selectedType?.name || \"Выберите тип\"}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {devices?.types.map((type) => (\n                                    <Dropdown.Item\n                                        onClick={() =>\n                                            devices.setSelectedType(type)\n                                        }\n                                        key={type.id}\n                                    >\n                                        {type.name}\n                                    </Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Dropdown>\n                            <Dropdown.Toggle className=\"w-40\">\n                                {devices?.selectedBrand?.name ||\n                                    \"Выберите брэнд\"}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {devices?.brands.map((brand) => (\n                                    <Dropdown.Item\n                                        onClick={() =>\n                                            devices.setSelectedBrand(brand)\n                                        }\n                                        key={brand.id}\n                                    >\n                                        {brand.name}\n                                    </Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Form.Control\n                            value={name}\n                            className=\"w-40\"\n                            placeholder=\"Название\"\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                        <Form.Control\n                            value={price === 0 ? \"\" : price}\n                            className=\"w-80\"\n                            placeholder=\"Стоимость\"\n                            type=\"number\"\n                            onChange={(e) => setPrice(+e.target.value)}\n                        ></Form.Control>\n                        <Form.Control\n                            className=\"w-40\"\n                            placeholder=\"Кол-во\"\n                            type=\"number\"\n                        ></Form.Control>\n                        <Form.Control\n                            className=\"w-65\"\n                            type=\"file\"\n                            onChange={selectFile}\n                        ></Form.Control>\n                    </Form>\n                    <Button variant=\"outline-dark mt-2 mb-3\" onClick={addInfo}>\n                        Добавить новое свойство\n                    </Button>\n                    <div className=\"d-flex gap-2 flex-column\">\n                        {info.map((i) => (\n                            <Row className=\"d-flex\" key={i.number}>\n                                <Col md={5}>\n                                    <Form.Control\n                                        placeholder=\"Введите название\"\n                                        value={i.title}\n                                        onChange={(e) =>\n                                            changeInfo(\n                                                \"title\",\n                                                e.target.value,\n                                                i.number\n                                            )\n                                        }\n                                    ></Form.Control>\n                                </Col>\n                                <Col md={5}>\n                                    <Form.Control\n                                        placeholder=\"Введите описание\"\n                                        value={i.description}\n                                        onChange={(e) =>\n                                            changeInfo(\n                                                \"description\",\n                                                e.target.value,\n                                                i.number\n                                            )\n                                        }\n                                    ></Form.Control>\n                                </Col>\n                                <Col md={2}>\n                                    <Button\n                                        variant=\"outline-dark w-100\"\n                                        onClick={() => removeInfo(i.number)}\n                                    >\n                                        Удалить\n                                    </Button>\n                                </Col>\n                            </Row>\n                        ))}\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"outline-success\"\n                        onClick={() => addDevice()}\n                    >\n                        Добавить\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n);\n","D:\\GitHub\\React_app_med\\client\\src\\components\\DeviceList\\DeviceItem\\DeviceItem.tsx",[],"D:\\GitHub\\React_app_med\\client\\src\\http\\userApi.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":36,"column":8,"nodeType":"152","endLine":36,"endColumn":10,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"154","severity":1,"message":"159","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":23},{"ruleId":"154","severity":1,"message":"160","line":11,"column":5,"nodeType":"156","messageId":"157","endLine":11,"endColumn":15},{"ruleId":"154","severity":1,"message":"161","line":15,"column":19,"nodeType":"156","messageId":"157","endLine":15,"endColumn":26},{"ruleId":"154","severity":1,"message":"162","line":1,"column":33,"nodeType":"156","messageId":"157","endLine":1,"endColumn":42},{"ruleId":"154","severity":1,"message":"163","line":1,"column":44,"nodeType":"156","messageId":"157","endLine":1,"endColumn":52},{"ruleId":"154","severity":1,"message":"164","line":3,"column":16,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},{"ruleId":"154","severity":1,"message":"165","line":3,"column":23,"nodeType":"156","messageId":"157","endLine":3,"endColumn":27},{"ruleId":"154","severity":1,"message":"166","line":3,"column":29,"nodeType":"156","messageId":"157","endLine":3,"endColumn":39},{"ruleId":"154","severity":1,"message":"167","line":3,"column":41,"nodeType":"156","messageId":"157","endLine":3,"endColumn":47},{"ruleId":"168","severity":1,"message":"169","line":33,"column":1,"nodeType":"170","messageId":"171","endLine":42,"endColumn":2},{"ruleId":"154","severity":1,"message":"172","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":21},{"ruleId":"154","severity":1,"message":"173","line":8,"column":37,"nodeType":"156","messageId":"157","endLine":8,"endColumn":47},{"ruleId":"150","severity":1,"message":"174","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":70,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"176","line":1,"column":14,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"177","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":17},{"ruleId":"154","severity":1,"message":"178","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":23},{"ruleId":"150","severity":1,"message":"179","line":31,"column":8,"nodeType":"152","endLine":31,"endColumn":10,"suggestions":"180"},{"ruleId":"154","severity":1,"message":"181","line":2,"column":41,"nodeType":"156","messageId":"157","endLine":2,"endColumn":44},{"ruleId":"154","severity":1,"message":"182","line":31,"column":17,"nodeType":"156","messageId":"157","endLine":31,"endColumn":21},{"ruleId":"154","severity":1,"message":"183","line":2,"column":16,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"154","severity":1,"message":"184","line":2,"column":21,"nodeType":"156","messageId":"157","endLine":2,"endColumn":30},{"ruleId":"154","severity":1,"message":"185","line":1,"column":33,"nodeType":"156","messageId":"157","endLine":1,"endColumn":39},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'devices' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["188"],"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","'DevicesInterface' is defined but never used.","'REGISTRATION_ROUTE' is defined but never used.","'SHOP_ROUTE' is defined but never used.","'devices' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Admin' is defined but never used.","'Auth' is defined but never used.","'DevicePage' is defined but never used.","'Basket' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fetchBrands' is defined but never used.","'fetchTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'devices'. Either include it or remove the dependency array.",["189"],"'useContext' is defined but never used.","'Context' is defined but never used.","'IoStarOutline' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["190"],"'Row' is defined but never used.","'data' is assigned a value but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [devices, user]",{"range":"197","text":"198"},"Update the dependencies array to be: [devices?.page, devices?.selectedType, devices?.selectedBrand, devices]",{"range":"199","text":"200"},"Update the dependencies array to be: [id]",{"range":"201","text":"202"},[1302,1304],"[devices, user]",[1117,1179],"[devices?.page, devices?.selectedType, devices?.selectedBrand, devices]",[993,995],"[id]"]